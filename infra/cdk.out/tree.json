{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "SmartHybridScheduler": {
        "id": "SmartHybridScheduler",
        "path": "SmartHybridScheduler",
        "children": {
          "AppTable": {
            "id": "AppTable",
            "path": "SmartHybridScheduler/AppTable",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/AppTable/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "pk",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "sk",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "gsi1pk",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "gsi1sk",
                        "attributeType": "S"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "globalSecondaryIndexes": [
                      {
                        "indexName": "GSI1",
                        "keySchema": [
                          {
                            "attributeName": "gsi1pk",
                            "keyType": "HASH"
                          },
                          {
                            "attributeName": "gsi1sk",
                            "keyType": "RANGE"
                          }
                        ],
                        "projection": {
                          "projectionType": "ALL"
                        }
                      },
                      {
                        "indexName": "gsi1",
                        "keySchema": [
                          {
                            "attributeName": "gsi1pk",
                            "keyType": "HASH"
                          },
                          {
                            "attributeName": "gsi1sk",
                            "keyType": "RANGE"
                          }
                        ],
                        "projection": {
                          "projectionType": "ALL"
                        }
                      }
                    ],
                    "keySchema": [
                      {
                        "attributeName": "pk",
                        "keyType": "HASH"
                      },
                      {
                        "attributeName": "sk",
                        "keyType": "RANGE"
                      }
                    ],
                    "pointInTimeRecoverySpecification": {
                      "pointInTimeRecoveryEnabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.152.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "SmartHybridScheduler/AppTable/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.152.0"
            }
          },
          "SiteBucket": {
            "id": "SiteBucket",
            "path": "SmartHybridScheduler/SiteBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/SiteBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.152.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "SmartHybridScheduler/SiteBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/SiteBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "SiteBucket397A1860"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "SiteBucket397A1860",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "SiteBucket397A1860",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "SiteBucket397A1860",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "SiteBucket397A1860",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "SiteOAI1F7E9870",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "SiteBucket397A1860",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              "Sid": "AllowCloudFrontOAIRead"
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "SiteOAI1F7E9870",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "SiteBucket397A1860",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.152.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "SmartHybridScheduler/SiteBucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "SmartHybridScheduler/SiteBucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.152.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "SmartHybridScheduler/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "SmartHybridScheduler/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.152.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "SmartHybridScheduler/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.152.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "SmartHybridScheduler/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.152.0"
            }
          },
          "SiteOAI": {
            "id": "SiteOAI",
            "path": "SmartHybridScheduler/SiteOAI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/SiteOAI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
              "version": "2.152.0"
            }
          },
          "SiteDistribution": {
            "id": "SiteDistribution",
            "path": "SmartHybridScheduler/SiteDistribution",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "SmartHybridScheduler/SiteDistribution/Origin1",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.4.2"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/SiteDistribution/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "SiteBucket397A1860",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "SmartHybridSchedulerSiteDistributionOrigin16E8B1E9D",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "SiteOAI1F7E9870"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "SmartHybridSchedulerSiteDistributionOrigin16E8B1E9D",
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "customErrorResponses": [
                        {
                          "errorCachingMinTtl": 0,
                          "errorCode": 403,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        },
                        {
                          "errorCachingMinTtl": 0,
                          "errorCode": 404,
                          "responseCode": 200,
                          "responsePagePath": "/index.html"
                        }
                      ],
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.152.0"
            }
          },
          "UserPool": {
            "id": "UserPool",
            "path": "SmartHybridScheduler/UserPool",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/UserPool/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_email",
                          "priority": 1
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": false
                    },
                    "autoVerifiedAttributes": [
                      "email"
                    ],
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "policies": {
                      "passwordPolicy": {
                        "minimumLength": 8
                      }
                    },
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "usernameAttributes": [
                      "email"
                    ],
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPool",
                  "version": "2.152.0"
                }
              },
              "CognitoDomain": {
                "id": "CognitoDomain",
                "path": "SmartHybridScheduler/UserPool/CognitoDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/UserPool/CognitoDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolDomain",
                      "aws:cdk:cloudformation:props": {
                        "domain": "yonibl-scheduler-app",
                        "userPoolId": {
                          "Ref": "UserPool6BA7E5F2"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolDomain",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.UserPoolDomain",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPool",
              "version": "2.152.0"
            }
          },
          "UserPoolClient": {
            "id": "UserPoolClient",
            "path": "SmartHybridScheduler/UserPoolClient",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/UserPoolClient/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                  "aws:cdk:cloudformation:props": {
                    "allowedOAuthFlows": [
                      "implicit",
                      "code"
                    ],
                    "allowedOAuthFlowsUserPoolClient": true,
                    "allowedOAuthScopes": [
                      "openid",
                      "email",
                      "profile"
                    ],
                    "callbackUrLs": [
                      "http://localhost:5173",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "https://",
                            {
                              "Fn::GetAtt": [
                                "SiteDistribution3FF9535D",
                                "DomainName"
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    "explicitAuthFlows": [
                      "ALLOW_USER_PASSWORD_AUTH",
                      "ALLOW_CUSTOM_AUTH",
                      "ALLOW_USER_SRP_AUTH",
                      "ALLOW_REFRESH_TOKEN_AUTH"
                    ],
                    "generateSecret": false,
                    "logoutUrLs": [
                      "http://localhost:5173",
                      {
                        "Fn::Join": [
                          "",
                          [
                            "https://",
                            {
                              "Fn::GetAtt": [
                                "SiteDistribution3FF9535D",
                                "DomainName"
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    "preventUserExistenceErrors": "ENABLED",
                    "supportedIdentityProviders": [
                      "COGNITO"
                    ],
                    "userPoolId": {
                      "Ref": "UserPool6BA7E5F2"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolClient",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient",
              "version": "2.152.0"
            }
          },
          "ApiLambda": {
            "id": "ApiLambda",
            "path": "SmartHybridScheduler/ApiLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "SmartHybridScheduler/ApiLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "SmartHybridScheduler/ApiLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.152.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/ApiLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.152.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "SmartHybridScheduler/ApiLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SmartHybridScheduler/ApiLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "AppTable815C50BC",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "AppTable815C50BC",
                                              "Arn"
                                            ]
                                          },
                                          "/index/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ApiLambdaServiceRoleDefaultPolicyF1B57697",
                            "roles": [
                              {
                                "Ref": "ApiLambdaServiceRole1CC7D0F3"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.152.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.152.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "SmartHybridScheduler/ApiLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "SmartHybridScheduler/ApiLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.152.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "SmartHybridScheduler/ApiLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.152.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/ApiLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-536580887554-il-central-1",
                      "s3Key": "fc94cebd00c5857f85e174a19cf4905ef1a79bba7645e732efcef71b99eaedd3.zip"
                    },
                    "environment": {
                      "variables": {
                        "TABLE_NAME": {
                          "Ref": "AppTable815C50BC"
                        },
                        "ALLOW_DEV_AUTH": "false",
                        "USER_POOL_ID": {
                          "Ref": "UserPool6BA7E5F2"
                        },
                        "USER_POOL_CLIENT_ID": {
                          "Ref": "UserPoolClient2F5918F7"
                        }
                      }
                    },
                    "handler": "app.handler",
                    "memorySize": 256,
                    "role": {
                      "Fn::GetAtt": [
                        "ApiLambdaServiceRole1CC7D0F3",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.12",
                    "timeout": 10
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.152.0"
            }
          },
          "ApiUserAuthorizer": {
            "id": "ApiUserAuthorizer",
            "path": "SmartHybridScheduler/ApiUserAuthorizer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/ApiUserAuthorizer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "identitySource": "method.request.header.Authorization",
                    "name": "SmartHybridSchedulerApiUserAuthorizerD9E8E447",
                    "providerArns": [
                      {
                        "Fn::GetAtt": [
                          "UserPool6BA7E5F2",
                          "Arn"
                        ]
                      }
                    ],
                    "restApiId": {
                      "Ref": "ApiF70053CD"
                    },
                    "type": "COGNITO_USER_POOLS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CognitoUserPoolsAuthorizer",
              "version": "2.152.0"
            }
          },
          "Api": {
            "id": "Api",
            "path": "SmartHybridScheduler/Api",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/Api/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "Api"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.152.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "SmartHybridScheduler/Api/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "SmartHybridScheduler/Api/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.152.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/Api/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.152.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "SmartHybridScheduler/Api/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "ApiCloudWatchRole73EC6FC4",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.152.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "SmartHybridScheduler/Api/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/Api/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "ApiF70053CD"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.152.0"
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "SmartHybridScheduler/Api/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SmartHybridScheduler/Api/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "ApiDeploymentB17BE62D4c75cc67fb5afa38ee7874017c1bdbc5"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "throttlingBurstLimit": 100,
                            "throttlingRateLimit": 50
                          }
                        ],
                        "restApiId": {
                          "Ref": "ApiF70053CD"
                        },
                        "stageName": "prod"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.152.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "SmartHybridScheduler/Api/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.152.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "SmartHybridScheduler/Api/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "SmartHybridScheduler/Api/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SmartHybridScheduler/Api/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "httpMethod": "OPTIONS",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Request-Id'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
                                  },
                                  "responseTemplates": {
                                    "application/json": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                          {
                                            "Fn::GetAtt": [
                                              "SiteDistribution3FF9535D",
                                              "DomainName"
                                            ]
                                          },
                                          "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true
                                }
                              }
                            ],
                            "resourceId": {
                              "Fn::GetAtt": [
                                "ApiF70053CD",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "ApiF70053CD"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.152.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.152.0"
                    }
                  },
                  "{proxy+}": {
                    "id": "{proxy+}",
                    "path": "SmartHybridScheduler/Api/Default/{proxy+}",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SmartHybridScheduler/Api/Default/{proxy+}/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "ApiF70053CD",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "{proxy+}",
                            "restApiId": {
                              "Ref": "ApiF70053CD"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.152.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "SmartHybridScheduler/Api/Default/{proxy+}/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "SmartHybridScheduler/Api/Default/{proxy+}/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "httpMethod": "OPTIONS",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Request-Id'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
                                      },
                                      "responseTemplates": {
                                        "application/json": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                              {
                                                "Fn::GetAtt": [
                                                  "SiteDistribution3FF9535D",
                                                  "DomainName"
                                                ]
                                              },
                                              "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true
                                    }
                                  }
                                ],
                                "resourceId": {
                                  "Ref": "Apiproxy05443892"
                                },
                                "restApiId": {
                                  "Ref": "ApiF70053CD"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.152.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.152.0"
                        }
                      },
                      "ANY": {
                        "id": "ANY",
                        "path": "SmartHybridScheduler/Api/Default/{proxy+}/ANY",
                        "children": {
                          "ApiPermission.SmartHybridSchedulerApi750DD481.ANY..{proxy+}": {
                            "id": "ApiPermission.SmartHybridSchedulerApi750DD481.ANY..{proxy+}",
                            "path": "SmartHybridScheduler/Api/Default/{proxy+}/ANY/ApiPermission.SmartHybridSchedulerApi750DD481.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "ApiLambda91D2282D",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:il-central-1:536580887554:",
                                      {
                                        "Ref": "ApiF70053CD"
                                      },
                                      "/",
                                      {
                                        "Ref": "ApiDeploymentStageprod3EB9684E"
                                      },
                                      "/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.152.0"
                            }
                          },
                          "ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..{proxy+}": {
                            "id": "ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..{proxy+}",
                            "path": "SmartHybridScheduler/Api/Default/{proxy+}/ANY/ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..{proxy+}",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "ApiLambda91D2282D",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:il-central-1:536580887554:",
                                      {
                                        "Ref": "ApiF70053CD"
                                      },
                                      "/test-invoke-stage/*/*"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.152.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "SmartHybridScheduler/Api/Default/{proxy+}/ANY/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "ApiUserAuthorizerC8FE937D"
                                },
                                "httpMethod": "ANY",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:il-central-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "ApiLambda91D2282D",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "Apiproxy05443892"
                                },
                                "restApiId": {
                                  "Ref": "ApiF70053CD"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.152.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.152.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.ProxyResource",
                      "version": "2.152.0"
                    }
                  },
                  "ANY": {
                    "id": "ANY",
                    "path": "SmartHybridScheduler/Api/Default/ANY",
                    "children": {
                      "ApiPermission.SmartHybridSchedulerApi750DD481.ANY..": {
                        "id": "ApiPermission.SmartHybridSchedulerApi750DD481.ANY..",
                        "path": "SmartHybridScheduler/Api/Default/ANY/ApiPermission.SmartHybridSchedulerApi750DD481.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "ApiLambda91D2282D",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:il-central-1:536580887554:",
                                  {
                                    "Ref": "ApiF70053CD"
                                  },
                                  "/",
                                  {
                                    "Ref": "ApiDeploymentStageprod3EB9684E"
                                  },
                                  "/*/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.152.0"
                        }
                      },
                      "ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..": {
                        "id": "ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..",
                        "path": "SmartHybridScheduler/Api/Default/ANY/ApiPermission.Test.SmartHybridSchedulerApi750DD481.ANY..",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                          "aws:cdk:cloudformation:props": {
                            "action": "lambda:InvokeFunction",
                            "functionName": {
                              "Fn::GetAtt": [
                                "ApiLambda91D2282D",
                                "Arn"
                              ]
                            },
                            "principal": "apigateway.amazonaws.com",
                            "sourceArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":execute-api:il-central-1:536580887554:",
                                  {
                                    "Ref": "ApiF70053CD"
                                  },
                                  "/test-invoke-stage/*/"
                                ]
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                          "version": "2.152.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "SmartHybridScheduler/Api/Default/ANY/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "authorizationType": "COGNITO_USER_POOLS",
                            "authorizerId": {
                              "Ref": "ApiUserAuthorizerC8FE937D"
                            },
                            "httpMethod": "ANY",
                            "integration": {
                              "type": "AWS_PROXY",
                              "uri": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":apigateway:il-central-1:lambda:path/2015-03-31/functions/",
                                    {
                                      "Fn::GetAtt": [
                                        "ApiLambda91D2282D",
                                        "Arn"
                                      ]
                                    },
                                    "/invocations"
                                  ]
                                ]
                              },
                              "integrationHttpMethod": "POST"
                            },
                            "resourceId": {
                              "Fn::GetAtt": [
                                "ApiF70053CD",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "ApiF70053CD"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.152.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.152.0"
                    }
                  },
                  "health": {
                    "id": "health",
                    "path": "SmartHybridScheduler/Api/Default/health",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "SmartHybridScheduler/Api/Default/health/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "ApiF70053CD",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "health",
                            "restApiId": {
                              "Ref": "ApiF70053CD"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.152.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "SmartHybridScheduler/Api/Default/health/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "SmartHybridScheduler/Api/Default/health/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "httpMethod": "OPTIONS",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Request-Id'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
                                      },
                                      "responseTemplates": {
                                        "application/json": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                              {
                                                "Fn::GetAtt": [
                                                  "SiteDistribution3FF9535D",
                                                  "DomainName"
                                                ]
                                              },
                                              "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true
                                    }
                                  }
                                ],
                                "resourceId": {
                                  "Ref": "Apihealth5CB7A415"
                                },
                                "restApiId": {
                                  "Ref": "ApiF70053CD"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.152.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.152.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "SmartHybridScheduler/Api/Default/health/GET",
                        "children": {
                          "ApiPermission.SmartHybridSchedulerApi750DD481.GET..health": {
                            "id": "ApiPermission.SmartHybridSchedulerApi750DD481.GET..health",
                            "path": "SmartHybridScheduler/Api/Default/health/GET/ApiPermission.SmartHybridSchedulerApi750DD481.GET..health",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "ApiLambda91D2282D",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:il-central-1:536580887554:",
                                      {
                                        "Ref": "ApiF70053CD"
                                      },
                                      "/",
                                      {
                                        "Ref": "ApiDeploymentStageprod3EB9684E"
                                      },
                                      "/GET/health"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.152.0"
                            }
                          },
                          "ApiPermission.Test.SmartHybridSchedulerApi750DD481.GET..health": {
                            "id": "ApiPermission.Test.SmartHybridSchedulerApi750DD481.GET..health",
                            "path": "SmartHybridScheduler/Api/Default/health/GET/ApiPermission.Test.SmartHybridSchedulerApi750DD481.GET..health",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "ApiLambda91D2282D",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:il-central-1:536580887554:",
                                      {
                                        "Ref": "ApiF70053CD"
                                      },
                                      "/test-invoke-stage/GET/health"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.152.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "SmartHybridScheduler/Api/Default/health/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "NONE",
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:il-central-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "ApiLambda91D2282D",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "Apihealth5CB7A415"
                                },
                                "restApiId": {
                                  "Ref": "ApiF70053CD"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.152.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.152.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.152.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
              "version": "2.152.0"
            }
          },
          "DailyRule": {
            "id": "DailyRule",
            "path": "SmartHybridScheduler/DailyRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SmartHybridScheduler/DailyRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "scheduleExpression": "rate(1 day)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "ApiLambda91D2282D",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.152.0"
                }
              },
              "AllowEventRuleSmartHybridSchedulerApiLambdaDF6C4597": {
                "id": "AllowEventRuleSmartHybridSchedulerApiLambdaDF6C4597",
                "path": "SmartHybridScheduler/DailyRule/AllowEventRuleSmartHybridSchedulerApiLambdaDF6C4597",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "ApiLambda91D2282D",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "DailyRule7A0FEF67",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.152.0"
            }
          },
          "StackName": {
            "id": "StackName",
            "path": "SmartHybridScheduler/StackName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "TableName": {
            "id": "TableName",
            "path": "SmartHybridScheduler/TableName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "ApiUrl": {
            "id": "ApiUrl",
            "path": "SmartHybridScheduler/ApiUrl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "BucketName": {
            "id": "BucketName",
            "path": "SmartHybridScheduler/BucketName",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "CloudFrontURL": {
            "id": "CloudFrontURL",
            "path": "SmartHybridScheduler/CloudFrontURL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "UserPoolId": {
            "id": "UserPoolId",
            "path": "SmartHybridScheduler/UserPoolId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "UserPoolClientId": {
            "id": "UserPoolClientId",
            "path": "SmartHybridScheduler/UserPoolClientId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "HostedUiBaseUrl": {
            "id": "HostedUiBaseUrl",
            "path": "SmartHybridScheduler/HostedUiBaseUrl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.152.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "SmartHybridScheduler/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "SmartHybridScheduler/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.152.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.4.2"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "SmartHybridScheduler/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.152.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "SmartHybridScheduler/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.152.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.152.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.4.2"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.152.0"
    }
  }
}